{"version":3,"sources":["PaymentForm.js","Review.js","Checkout.js","App.js","serviceWorker.js","index.js"],"names":["PaymentForm","react_default","a","createElement","Fragment","Typography_default","variant","gutterBottom","Grid_default","container","spacing","item","xs","md","TextField_default","required","id","label","fullWidth","helperText","FormControlLabel_default","control","Checkbox_default","color","name","value","products","desc","price","addresses","payments","detail","withStyles","theme","listItem","padding","concat","unit","total","fontWeight","title","marginTop","props","classes","List_default","disablePadding","map","product","ListItem_default","className","key","ListItemText_default","primary","secondary","sm","join","direction","payment","steps","Checkout","state","activeStep","handleNext","_this","setState","handleBack","handleReset","this","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","noWrap","layout","Paper_default","paper","component","align","Stepper_default","stepper","Step_default","StepLabel_default","length","step","src_PaymentForm","src_Review","Error","getStepContent","buttons","Button_default","onClick","button","React","Component","Object","defineProperty","width","marginLeft","marginRight","breakpoints","up","marginBottom","display","justifyContent","App","src_Checkout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb0a4db2.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction PaymentForm() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"cardName\" label=\"Value\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"cardName\" label=\"Name on card\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"cardNumber\" label=\"Card number\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"cvv\"\n            label=\"CVV\"\n            helperText=\"Last three digits on signature strip\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\n            label=\"Remember credit card details for next time\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default PaymentForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\nconst products = [\n  { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\n  { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\n  { name: 'Product 3', desc: 'Something else', price: '$6.51' },\n  { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\n  { name: 'Shipping', desc: '', price: 'Free' },\n];\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\nconst payments = [\n  { name: 'Card type', detail: 'Visa' },\n  { name: 'Card holder', detail: 'Mr John Smith' },\n  { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\n  { name: 'Expiry date', detail: '04/2024' },\n];\n\nconst styles = theme => ({\n  listItem: {\n    padding: `${theme.spacing.unit}px 0`,\n  },\n  total: {\n    fontWeight: '700',\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2,\n  },\n});\n\nfunction Review(props) {\n  const { classes } = props;\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <List disablePadding>\n        {products.map(product => (\n          <ListItem className={classes.listItem} key={product.name}>\n            <ListItemText primary={product.name} secondary={product.desc} />\n            <Typography variant=\"body2\">{product.price}</Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            $34.06\n          </Typography>\n        </ListItem>\n      </List>\n      <Grid container spacing={16}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Shipping\n          </Typography>\n          <Typography gutterBottom>John Smith</Typography>\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Payment details\n          </Typography>\n          <Grid container>\n            {payments.map(payment => (\n              <React.Fragment key={payment.name}>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.name}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.detail}</Typography>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nReview.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Review);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nconst steps = ['Payment details', 'Review your order'];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n    case 1:\n      return <PaymentForm />;\n    case 2:\n      return <Review />;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nclass Checkout extends React.Component {\n  state = {\n    activeStep: 0,\n  };\n\n  handleNext = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep + 1,\n    }));\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              TransparUSP\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              Checkout\n            </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map(label => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Thank you for your order.\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    Your order number is #2001539. We have emailed your order confirmation, and will\n                    send you an update when your order has shipped.\n                  </Typography>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep)}\n                  <div className={classes.buttons}>\n                    {activeStep !== 0 && (\n                      <Button onClick={this.handleBack} className={classes.button}>\n                        Back\n                      </Button>\n                    )}\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                    </Button>\n                  </div>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          </Paper>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Checkout);\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Checkout from './Checkout';\n\nclass App extends Component {\n  render() {\n    return (\n      <Checkout />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}